/*  * To change this template, choose Tools | Templates * and open the template in the editor. */define('providers/edit', [	'providers',	'utils/str',	'jquery',    'jquery/tmpl',	'jqueryui/draggable',    'jqueryui/texteditor',	//'providers/edit/adaptor',    'tmpl!livedesk>providers/edit',], function( providers, str, $ ) {	$.extend(providers.edit, {		init: function(theBlog) {            var            editorImageControl = function()            {                // call super                var command = $.ui.texteditor.prototype.plugins.controls.image.apply(this, arguments);                // do something on insert event                $(command).on('image-inserted.text-editor', function()                {                    var img = $(this.lib.selectionHas('img'));                    if( !img.parents('figure.blog-image:eq(0)').length )                        img.wrap('<figure class="blog-image" />');                });                return command;            },            editorTitleControls = $.extend({}, $.ui.texteditor.prototype.plugins.controls, { image : editorImageControl }),            initEdit = function(theBlog) {                var content = $(this).find('[is-content]'),                    h2ctrl = $.extend({}, $.ui.texteditor.prototype.plugins.controls);                delete h2ctrl.justifyRight;                delete h2ctrl.justifyLeft;                delete h2ctrl.justifyCenter;                delete h2ctrl.html;                delete h2ctrl.image;                delete h2ctrl.link;                content.find('article').texteditor                ({                    plugins:{ controls: editorTitleControls },                    floatingToolbar: 'top'                });                $(this)                    .off('click.livedesk')                    .on( 'click.livedesk','[ci="savepost"]', function(e){                        e.preventDefault();                        var data = {};                        data.                            console.log(data);                    })                    .on('click.livedesk','[ci="save"]',function(e){                        e.preventDefault();                        console.log('savet');                    });                $('form').submit(function() {                    console.log($(this).serializeArray());                    return false;                });            }, self = this;			var blog = new $.restAuth(theBlog+'/User/1/Post/Unpublished').done(function(colabList)            {                var postsList = [];            });            new $.restAuth('Superdesk/PostType').xfilter('Key').done(function(PostTypes){                self.el.tmpl('livedesk>providers/edit',{PostTypes: PostTypes},function(){                    initEdit.call(this, theBlog);               });            });		}			});	return providers;});